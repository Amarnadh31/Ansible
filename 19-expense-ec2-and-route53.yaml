- name: create ec2 and route 53
  hosts: local
  connection: local
  vars:
    subnet: "subnet-04ae1be87eba08509"
    instance_type: "t2.micro"
    sg: "sg-0c877d770e3e4833f"
    ami: "ami-09c813fb71547fc4f"
    instances:
    - mysql
    - backend
    - frontend
    zone: expensemind.online
  tasks:
  # - name: installing botocore and boto3
  #   ansible.builtin.command: pip3.9 install botocore boto3

  - name: creating ec2 instance
    amazon.aws.ec2_instance:
      region: us-east-1
      name: "{{ item }}"
      vpc_subnet_id: "{{ subnet }}"
      instance_type: "{{ instance_type }}"
      security_group: "{{ sg }}"
      image_id: "{{ ami }}"
    #   network_interfaces:
    #   - assign_public_ip: false
    # when: item != instances.frontend
      state: absent
    loop: "{{instances}}"
    # loop:
    # - mysql
    # - backend
    # - frontend
    register: my_instance
    # state: absent

  - name: output of instances
    ansible.builtin.debug:
      msg: "{{ my_instance}}"
  
  - name: create route 53 records
    amazon.aws.route53:
      # state: present
      zone: "{{ zone }}"
      record: "{{item.item}}.{{ zone }}"
      type: A
      ttl: 1
      value: "{{item.instances[0].private_ip_address}}"
      wait : true
      overwrite : true
      state: absent

    loop: "{{my_instance.results}}"

  - name: create route 53 public record
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ zone }}"
      type: A
      ttl: 1
      value: "{{item.instances[0].public_ip_address}}"
      wait : true
      overwrite : true
      loop: "{{my_instance.results}}"
      when: my_instance.results.item == "frontend"
      # state: absent